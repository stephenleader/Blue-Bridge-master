C51 COMPILER V9.54   MAIN                                                                  04/07/2022 22:22:44 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\MAIN.obj
COMPILER INVOKED BY: D:\Keil5\x64\C51\BIN\C51.EXE MAIN.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\MA
                    -IN.lst) TABS(2) OBJECT(.\Objects\MAIN.obj)

line level    source

   1          //ÔÚCT107Dµ¥Æ¬»ú×ÛºÏÊµÑµÆ½Ì¨ÉÏ£¬²úÉúPWMÂö¿íµ÷ÖÆĞÅºÅ¿ØÖÆ8¸öLEDµÆ½øĞĞºôÎüÁ÷Ë®±ä»¯£¬¾ßÌå¹¦ÄÜÒªÇóÈçÏÂ£º
   2          
   3          //      [1] ÉÏµç¿ª»úÔËĞĞÊ±£¬¹Ø±Õ·äÃùÆ÷ºÍ¼ÌµçÆ÷£¬L4ºÍL5µãÁÁ£¬ÆäÓàLEDµÆÏ¨Ãğ¡£
   4          
   5          //      [2] µã°´¶ÀÁ¢°´¼üS4ËÉ¿ªºó£¬¿ªÊ¼¿ØÖÆCT107D°åÉÏµÄL1-L8°Ë¸öLEDĞ¡µÆ½øĞĞÃ¿¸ô1ÃëµÄºôÎüÁ÷Ë®µãÁÁ£¬¼´£ºL1»ºÂ
             -ıÁÁ->L1»ºÂıÃğ->L2»ºÂıÁÁ->L2»ºÂıÃğ....L8»ºÂıÁÁ->L8»ºÂıÃğ->L1»ºÂıÁÁ->L1»ºÂıÃğ....Ñ­»·Íù¸´¡£
   6          
   7          //      [3] ÔÙ´Îµã°´¶ÀÁ¢°´¼üS4ËÉ¿ªºó£¬¿ØÖÆCT107D°åÉÏµÄLEDµÆ´Óµ±Ç°µÆ¿ªÊ¼ÄæÏòºôÎüÁ÷Ë®¡£¼´£º±ÈÈçµ±Ç°µÄÁ÷Ë®ÊÇL
             -2»ºÂıÃğ->L3»ºÂıÁÁ£¬°´ÏÂS4°´¼üËÉ¿ªºó£¬L3»ºÂıÃğ->L2»ºÂıÁÁ->L2»ºÂıÃğ->L1»ºÂıÁÁ->L1»ºÂıÃğ->L8»ºÂıÁÁ->L8»ºÂıÃğ....Ñ­»·Íù¸´¡£
   8          
   9          //      [4] Ã¿¸öLEDµÆ£¬»ºÂıµãÁÁ0.5Ãë£¬»ºÂıÏ¨Ãğ0.5Ãë¡£
  10          
  11          //      [5] °´ÏÂ¶ÀÁ¢°´¼üS4Ê±£¬µ±Ç°LEDµÆÔİÍ£Á÷Ë®±ä»¯²¢±£³ÖÏÖÓĞÁÁ¶È£¬Ö±ÖÁ°´¼üËÉ¿ªºó£¬ÁÁ¶È²Å¿ªÊ¼±ä»¯¡£´ıµ±Ç°µ
             -ÄÁÁ¶È±ä»¯Íê³Éºó£¬²Å¿ªÊ¼µ÷ÕûºôÎüÁ÷Ë®µÄ·½Ïò¡£
  12          
  13          //      [6] °´ÏÂ¶ÀÁ¢°´¼üS7Ê±£¬ÔÚÊıÂë¹ÜÉÏÏÔÊ¾µ±Ç°LEDµÆµÄÎ»ÖÃºÍPWMĞÅºÅÕ¼¿Õ±È£¬ËÉ¿ªºó£¬ÊıÂë¹ÜÏ¨Ãğ¡£ÔÚ×î×ó±ßµÄ
             -1Î»ÊıÂë¹ÜÏÔÊ¾LEDµÆµÄÎ»ÖÃ£¬ÔÚ×îÓÒ±ßµÄ2Î»ÊıÂë¹ÜÏÔÊ¾PWMĞÅºÅµÄÕ¼¿Õ±È¡£ÀıÈç£ºµ±Ç°µãÁÁL6µÆ¹â£¬PWMĞÅºÅµÄÕ¼¿Õ±ÈÎª30%£¬ÔÚÊıÂë¹Ü×î
             -×ó±ßµÄ1Î»ÏÔÊ¾¡°6¡±£¬ÔÚ×îÓÒ±ßµÄ2Î»ÊıÂë¹ÜÏÔÊ¾¡°30¡±£¬ÆäÓàµÄÊıÂë¹ÜÏ¨Ãğ¡£
  14          
  15          //      [7] °´ÏÂ¶ÀÁ¢°´¼üS7Ê±£¬µ±Ç°LEDµÆÔİÍ£Á÷Ë®±ä»¯²¢±£³ÖÏÖÓĞÁÁ¶È£¬Ö±ÖÁ°´¼üËÉ¿ªºó£¬ÁÁ¶È²Å¿ªÊ¼±ä»¯¡£
  16          //¡ª¡ª¡ª¡ª¡ª¡ª¡ª¡ª¡ª¡ª¡ª¡ª¡ª¡ª¡ª¡ª
  17          //°æÈ¨ÉùÃ÷£º±¾ÎÄÎªCSDN²©Ö÷¡¸Ğ¡ÃÛ·äÀÏÊ¦¡¹µÄÔ­´´ÎÄÕÂ£¬×ñÑ­CC 4.0 BY-SA°æÈ¨Ğ­Òé£¬×ªÔØÇë¸½ÉÏÔ­ÎÄ³ö´¦Á´½Ó¼°±¾Éù
             -Ã÷¡£
  18          //Ô­ÎÄÁ´½Ó£ºhttps://blog.csdn.net/ohy3686/article/details/88372244
  19          
  20          #include "regx52.h"
  21          #include "absacc.h"
  22           
  23          sbit S7 = P3^0;
  24          sbit S4 = P3^3;
  25           
  26          unsigned char pwm = 0;          
  27          unsigned char pwm_duty = 0;              
  28          unsigned char times = 0;        
  29          unsigned char led_go = 0;       
  30          unsigned char stat_go = 0;      
  31          unsigned char stat = 0;         
  32          unsigned char key_puse = 0;     
  33           
  34          unsigned char code SMG_duanma[18]=
  35              {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,
  36               0x88,0x80,0xc6,0xc0,0x86,0x8e,0xbf,0x7f};
  37           
  38          void DelaySMG(unsigned int t)
  39          {
  40   1        while(t--);
  41   1      }
  42           
  43          void DisplaySMG_Bit(unsigned char pos, unsigned char value)
  44          {
  45   1        XBYTE[0xE000] = 0xff;
  46   1        XBYTE[0xC000] = 0x01 << pos;
  47   1        XBYTE[0xE000] = value;
  48   1      }
C51 COMPILER V9.54   MAIN                                                                  04/07/2022 22:22:44 PAGE 2   

  49           
  50          void Display_Info(unsigned char pos, unsigned char duty)
  51          {
  52   1        DisplaySMG_Bit(0, SMG_duanma[pos]);
  53   1        DelaySMG(500);
  54   1       
  55   1        DelaySMG(500);
  56   1        DisplaySMG_Bit(6, SMG_duanma[duty / 10]);
  57   1        DelaySMG(500);
  58   1        DisplaySMG_Bit(7, SMG_duanma[duty % 10]); 
  59   1        DelaySMG(500);
  60   1        
  61   1        DisplaySMG_Bit(0, 0xff);
  62   1        DisplaySMG_Bit(6, 0xff);
  63   1        DisplaySMG_Bit(7, 0xff);
  64   1      }
  65           
  66          void Init_Timer0()
  67          {
  68   1        TMOD = 0x01;
  69   1        TH0 = (65535 - 1000) / 256;     
  70   1        TL0 = (65535 - 1000) % 256;
  71   1        
  72   1        ET0 = 1;
  73   1        EA = 1;
  74   1        TR0 = 1;
  75   1      }
  76           
  77          void Service_Timer0() interrupt 1
  78          {
  79   1        TH0 = (65535 - 1000) / 256;
  80   1        TL0 = (65535 - 1000) % 256;
  81   1        
  82   1        if(stat_go == 0)                  
  83   1            {
  84   2              XBYTE[0x8000] = 0xe7;           
  85   2              return;
  86   2            } 
  87   1        
  88   1              pwm++;                
  89   1        
  90   1            if(pwm <= pwm_duty)   
  91   1            {
  92   2        XBYTE[0x8000] = ~(0x01 << stat);
  93   2            }
  94   1            else if(pwm <= 10)
  95   1            {
  96   2              XBYTE[0x8000] = 0xff;
  97   2            }
  98   1            else
  99   1            {
 100   2              XBYTE[0x8000] = ~(0x01 << stat);
 101   2          
 102   2              pwm = 0;
 103   2              if(key_puse == 0)     
 104   2              {
 105   3                times++;
 106   3              }
 107   2            }
 108   1      }
 109           
 110          void LED_Control()
C51 COMPILER V9.54   MAIN                                                                  04/07/2022 22:22:44 PAGE 3   

 111          {
 112   1        if(times == 5)          
 113   1        {
 114   2          times = 0;
 115   2          if(led_go == 0)       
 116   2          {
 117   3            pwm_duty = pwm_duty + 1;
 118   3            if(pwm_duty == 11)
 119   3            {
 120   4              pwm_duty = 10;
 121   4              led_go = 1;
 122   4            }
 123   3          }
 124   2          else if(led_go == 1)  
 125   2          {
 126   3            pwm_duty = pwm_duty - 1;
 127   3            if(pwm_duty == 255)
 128   3            {
 129   4              pwm_duty = 0;
 130   4              led_go = 0;
 131   4              
 132   4              if(stat_go == 1)      
 133   4              {
 134   5                stat++;
 135   5                if(stat == 8)
 136   5                {
 137   6                  stat = 0;
 138   6                }
 139   5              }
 140   4              else if(stat_go == 2) 
 141   4              {
 142   5                stat--;
 143   5                if(stat == 255)
 144   5                {
 145   6                  stat = 7;
 146   6                }
 147   5              }
 148   4            }
 149   3          }
 150   2        }
 151   1      }
 152           
 153          void Scan_Keys()
 154          {
 155   1        if(S4 == 0)
 156   1        {
 157   2          DelaySMG(100);
 158   2          if(S4 == 0)
 159   2          {
 160   3            while(S4 == 0)
 161   3            {
 162   4              key_puse = 1;
 163   4            }
 164   3            key_puse = 0;
 165   3            
 166   3            stat_go++;            
 167   3            if(stat_go == 3)
 168   3            {
 169   4              stat_go = 1;
 170   4            }
 171   3          }
 172   2        }
C51 COMPILER V9.54   MAIN                                                                  04/07/2022 22:22:44 PAGE 4   

 173   1        
 174   1        if(S7 == 0)
 175   1        {
 176   2          DelaySMG(100);
 177   2          if(S7 == 0)
 178   2          {
 179   3            while(S7 == 0)
 180   3            {
 181   4              key_puse = 1;
 182   4              Display_Info(stat + 1, pwm_duty * 10);
 183   4            }
 184   3            key_puse = 0;
 185   3          }
 186   2        }
 187   1      }
 188           
 189          void Init_System()
 190          {
 191   1        XBYTE[0xA000] = 0xff;
 192   1        XBYTE[0xA000] = 0x00;
 193   1        XBYTE[0xE000] = 0xff;
 194   1        XBYTE[0xC000] = 0xff;
 195   1        
 196   1        Init_Timer0();
 197   1      }
 198           
 199          main()
 200          {
 201   1        Init_System();
 202   1        while(1)
 203   1        {
 204   2          LED_Control();
 205   2          Scan_Keys();
 206   2        }
 207   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    418    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
