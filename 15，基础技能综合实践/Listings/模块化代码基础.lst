C51 COMPILER V9.54   ______________                                                        04/02/2022 21:17:04 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE ______________
OBJECT MODULE PLACED IN .\Objects\模块化代码基础.obj
COMPILER INVOKED BY: D:\Keil5\x64\C51\BIN\C51.EXE 模块化代码基础.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\模块化代码基础.lst) TABS(2) OBJECT(.\Objects\模块化代码基础.obj)

line level    source

   1          /**
   2          拿到题，要分析他的需求
   3          要实现哪些功能:
   4          *
   5          ==============================================================
   6          题目如下：
   7          1，设计系统初始函数，
   8          关闭蜂鸣器和继电器等无关设备
   9          2，设计设备检测函数，首先检测LED指示灯，
  10          从L1~L8一次逐个点亮，再逐个熄灭；然后的检查数码管
  11          ，从左到右依次亮再从左到右熄灭
  12          3，系统上显示00时00分00秒开始
  13          |  1    2  |   -   |  0   0  |   -  |  0   2 | 
  14          ------------------------------------------------
  15          |  12时    | 间隔  | 0分      |间隔 |  2秒    |
  16          4，L1~L4指示灯为远程控制组，L7~L8为本地控制组
  17          远程通过上位机串口发送命令控制开关，本地S5控制L7,按键S4控制L8
  18          ==============================================================
  19          *
  20          *
  21          *此外通信规约请看：该文件根目录下的png
  22          */
  23          
  24          #include "reg52.h"
  25          
  26          sfr AUXR = 0x8e;
  27          
  28          sbit S5 = P3^2;
  29          sbit S4 = P3^3;
  30          
  31          /*注意都最好设置为char型变量*/
  32          unsigned char t_s = 0;
  33          unsigned char t_m = 0;
  34          unsigned char t_h = 0;
  35          unsigned char count = 0;
  36          unsigned char command = 0;
  37            
  38          //定义LED等当前开关状态
  39          unsigned char stat_led = 0xff;   
  40          
  41          //共阳极数码管码值，为0时导通
  42          unsigned char code SMG_duanma[18]={
  43              0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,
  44              0x80,0x90,0x88,0x80,0xc6,0xc0,0x86,0x8e,
  45              0xbf,0x7f};
  46                                              
  47          void Delay(unsigned int t)
  48          {
  49   1        while(t--);
  50   1      }
  51          
  52          /*选择锁存器*/
  53          void SelectHC573(unsigned channel)
  54          {
C51 COMPILER V9.54   ______________                                                        04/02/2022 21:17:04 PAGE 2   

  55   1        switch(channel)
  56   1        {
  57   2          case 4:
  58   2            P2 = (P2 & 0x1f) | 0x80;
  59   2          break;
  60   2          
  61   2          case 5:
  62   2            P2 = (P2 & 0x1f) | 0xa0;
  63   2          break;
  64   2          
  65   2          case 6:
  66   2            P2 = (P2 & 0x1f) | 0xc0;
  67   2          break;
  68   2          
  69   2          case 7:
  70   2            P2 = (P2 & 0x1f) | 0xe0;
  71   2          break;
  72   2          
  73   2          case 0:
  74   2            P2 = (P2 & 0x1f) | 0x00;
  75   2          break;
  76   2        }
  77   1      }
  78          
  79          /*==========单个数码管显示函数==============
  80          *参数 value--数码管上显示的内容
  81          *     pos  --数码管位选。即要点亮的数码管位置
  82          */
  83          void DisplaySMG_Bit(unsigned char value,unsigned char pos)
  84          {
  85   1        SelectHC573(6);
  86   1        P0 = 0x01 << pos;
  87   1        SelectHC573(7);
  88   1        P0 = value;
  89   1      }
  90          
  91          /*==========系统运行时间显示函数============
  92          *功能 在数码管上显示系统运行的时间
  93          *参数 无
  94          */
  95          void DisplayTime()
  96          {
  97   1        DisplaySMG_Bit(SMG_duanma[t_s%10],7);
  98   1        Delay(600);
  99   1        DisplaySMG_Bit(SMG_duanma[t_s/10],6);
 100   1        Delay(600);
 101   1        DisplaySMG_Bit(SMG_duanma[16],5);
 102   1        //表示-符号
 103   1        Delay(600);
 104   1        
 105   1        DisplaySMG_Bit(SMG_duanma[t_m%10],4);
 106   1        Delay(600);
 107   1        DisplaySMG_Bit(SMG_duanma[t_m/10],3);
 108   1        Delay(600);
 109   1        DisplaySMG_Bit(SMG_duanma[16],2);
 110   1        Delay(600);
 111   1        
 112   1        DisplaySMG_Bit(SMG_duanma[t_h%10],1);
 113   1        Delay(600);
 114   1        DisplaySMG_Bit(SMG_duanma[t_h/10],0);
 115   1        Delay(600);
 116   1      }
C51 COMPILER V9.54   ______________                                                        04/02/2022 21:17:04 PAGE 3   

 117          
 118          /*=========定时器函数=================
 119          *功能 进行系统运行时间的逻辑处理,将定时器T0设置为16位模式
 120          *，且计算初始值为50ms
 121          *参数 无
 122          */
 123          void InitTimer0()
 124          {
 125   1        TMOD = 0x21;   //高4位定时/计数器1模式为可以自动重装
 126   1                       //低4位定时/计数器为16位定时/计数器模式
 127   1        TH0 = (65535 - 50000)/256;
 128   1        TL0 = (65535 - 50000)%256;
 129   1        ET0 = 1;    //使能定时器T0
 130   1        EA = 1;     //使能总中断
 131   1        TR0 = 1;    //启动定时器T0
 132   1      }
 133          
 134          /*==========定时器T0中断服务函数=======
 135          *进行系统时间的逻辑处理
 136          *参数 无
 137          */
 138          void ServiceTimer0() interrupt 1
 139          {
 140   1        TH0 = (65535 - 50000)/256;
 141   1        TL0 = (65535 - 50000)%256;
 142   1        
 143   1        count++;
 144   1        if(count == 20)
 145   1        {
 146   2          count = 0;
 147   2          t_s++;
 148   2        }
 149   1        if(t_s == 60)
 150   1        {
 151   2          t_s = 0;  
 152   2          t_m++;          /*到60秒的时候
 153   2                          ，秒数清零，
 154   2                          分钟数开始加1*/
 155   2          if(t_m == 60)
 156   2          {
 157   3            t_m = 0;
 158   3            t_h++;
 159   3          }
 160   2        }
 161   1      }
 162          
 163          /*============串口初始化函数===========
 164          *功能 将串口初始化为模式1，波特率为9600
 165          *，且允许接收
 166          */
 167          void InitUart()
 168          {
 169   1        TMOD = 0x21;  //需要注意，T0和T1是一起赋值的
 170   1        TH1 = 0xfd;   /*背的公式
 171   1                      *记住0xfd*/
 172   1        TL1 = 0xfd;
 173   1        TR1 = 1;
 174   1        
 175   1        SCON = 0x50;
 176   1        AUXR = 0x00;
 177   1        
 178   1        ES = 1;  //使能串口中断
C51 COMPILER V9.54   ______________                                                        04/02/2022 21:17:04 PAGE 4   

 179   1        EA = 1;   //使能总中断
 180   1      }
 181            
 182          /*===========串口中断服务函数==========
 183          *功能 接收上位机的数据并保存在command变量中
 184          */
 185          void ServiceUart() interrupt 4
 186          {
 187   1        if(RI == 1)
 188   1        {
 189   2          command = SBUF; //将接收到的数据放在command变量中
 190   2          RI = 0; //将接收标志位清0
 191   2        }
 192   1      }
 193          
 194          /*==========单片机发送字节函数===========
 195          *功能 串口向上位机发送一个字节
 196          *参数 dat--要发送的内容
 197          */
 198          void SendByte(unsigned char dat)
 199          {
 200   1        SBUF = dat;
 201   1        while(TI == 0);//判断发送了没有
 202   1        TI = 0;
 203   1      }
 204          
 205          //=========上位机命令解析执行函数=========
 206          //参数 接受上位机的数据并保存在command中
 207          void ExecuteCommand()
 208          {
 209   1        if(command != 0x00)         //接收到一个上位机命令
 210   1        {
 211   2          switch(command & 0xf0)    //将命令类型取出来
 212   2          {
 213   3            case 0xa0:
 214   3              SelectHC573(4);
 215   3              stat_led = (stat_led | 0x0f) & ~(-command | 0xf0);
 216   3              P0 = stat_led;
 217   3              SelectHC573(0);
 218   3              command = 0x00;
 219   3            break;
 220   3            
 221   3            case 0xb0:
 222   3              SendByte(( t_h / 10 << 4 ) | ( t_h % 10));
 223   3              SendByte(( t_m / 10 << 4 ) | ( t_m % 10));
 224   3              SendByte(( t_s / 10 << 4 ) | ( t_s % 10));
 225   3              command = 0x00;
 226   3            break;      
 227   3          }
 228   2        }
 229   1      }
 230          
 231          //============独立按键扫描函数==========
 232          //功能 扫描S5和S4按键并执行现场灯光控制
 233          void ScanKeys()
 234          {
 235   1        if(S5 == 0)
 236   1        {
 237   2          DisplayTime();
 238   2          if(S5 == 0)
 239   2          {
 240   3            while(S5 == 0)
C51 COMPILER V9.54   ______________                                                        04/02/2022 21:17:04 PAGE 5   

 241   3            {
 242   4              DisplayTime();
 243   4            }
 244   3            SelectHC573(4);
 245   3            stat_led = ( stat_led | 0x40 ) & (-stat_led | 0xbf);
 246   3            P0 = stat_led;
 247   3            SelectHC573(0);
 248   3          }
 249   2        }
 250   1        
 251   1        if(S4 == 0)
 252   1        {
 253   2          DisplayTime();
 254   2          if(S4 == 0)
 255   2          {
 256   3            while(S4 == 0)
 257   3            {
 258   4              DisplayTime();
 259   4            }
 260   3            SelectHC573(4);
 261   3            stat_led = ( stat_led | 0x80 ) & (-stat_led | 0x7f);
 262   3            P0 = stat_led;
 263   3            SelectHC573(0);
 264   3          }
 265   2        }
 266   1      }
 267          
 268          //============工厂灯光检测函数==============
 269          //功能 逐个检测工厂灯光的工作状态
 270          void CheckLED()
 271          {
 272   1        char i;
 273   1        SelectHC573(4);
 274   1        for ( i = 0 ; i < 9 ; i++ )
 275   1        {
 276   2          stat_led = 0xfe << i;  //从右到左逐个检查
 277   2          P0 = stat_led;
 278   2          Delay(60000);
 279   2        }
 280   1        for ( i = 0 ; i < 9 ; i++ )
 281   1        {
 282   2          stat_led = ~(0xfe << i);
 283   2          P0 = stat_led;
 284   2          Delay(60000);
 285   2        }
 286   1        SelectHC573(0);
 287   1      }
 288          
 289          //============工厂数码管检测函数============
 290          void CheckSMG()
 291          {
 292   1        char i;
 293   1        SelectHC573(7);
 294   1        P0 = 0x00;
 295   1        for ( i = 0 ; i < 9 ; i++ )
 296   1        {
 297   2          SelectHC573(6);
 298   2          P0 = ~(0xfe << i);
 299   2          Delay(60000);
 300   2        }
 301   1        for ( i = 0 ; i < 9 ; i++ )
 302   1        {
C51 COMPILER V9.54   ______________                                                        04/02/2022 21:17:04 PAGE 6   

 303   2          SelectHC573(6);
 304   2          P0 = 0xfe << i;
 305   2          Delay(60000);
 306   2        }
 307   1          SelectHC573(0);
 308   1      }
 309          
 310          //============初始化函数=============
 311          void InitSystem()
 312          {
 313   1        SelectHC573(5);
 314   1        P0 = 0x00;
 315   1        SelectHC573(4);
 316   1        P0 = stat_led;
 317   1        SelectHC573(0);
 318   1      }
 319          
 320          void main(void)
 321          {
 322   1        InitSystem();
 323   1        CheckLED();
 324   1        CheckSMG();
 325   1        InitTimer0();
 326   1        InitUart();
 327   1        while(1)
 328   1        {
 329   2          ExecuteCommand();
 330   2          DisplayTime();
 331   2          ScanKeys();
 332   2        }
 333   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    690    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
